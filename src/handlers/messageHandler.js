const { generateNickname, generatePassword, generateServerButtons, handleServerResponse } = require('../uitls');
const isUserSubscribed = require('../uitls/isUserSubscribed');

module.exports = async (bot, msg, chatStates, requiredChannelId, commands, isUserSubscribed) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;

    if (msg.chat.type !== 'private') {
        return;
    }

    if (await isUserSubscribed(userId)) {
        const text = msg.text;

        if (text === 'üõ† –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–∏–∫–Ω–µ–π–º') {
            const nickname = generateNickname();
            bot.sendMessage(chatId, `ü§ñ –í–∞—à –Ω–∏–∫–Ω–µ–π–º: ${nickname}`);
        } else if (text === 'üîê –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å') {
            const passwordLength = 12;
            const password = generatePassword(passwordLength);
            bot.sendMessage(chatId, `üîê –í–∞—à –ø–∞—Ä–æ–ª—å –¥–ª—è –ª—é–±–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞, –ø–æ–¥–æ–π–¥—ë—Ç –∏ –¥–ª—è –∞—Ä–∏–∑–æ–Ω—ã: ${password}`);
        } else if (text === 'üì° –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä') {
            bot.sendMessage(chatId, 'üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–ò—Ö –≤—Å–µ–≥–æ 30).', {
                reply_markup: {
                    keyboard: generateServerButtons(31),
                    resize_keyboard: true
                }
            });
            chatStates[chatId] = 'waiting_for_number1';
        } else if (text === 'üìÉ –†–∞–∑–¥–µ–ª —Ñ–æ—Ä—É–º–∞') {
            bot.sendMessage(chatId, 'üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, —Ñ–æ—Ä—É–º –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç (–ò—Ö –≤—Å–µ–≥–æ 30).', {
                reply_markup: {
                    keyboard: generateServerButtons(31),
                    resize_keyboard: true
                }
            });
            chatStates[chatId] = 'waiting_for_number2';
        } else if (text === 'üñ• –ê–π–ø–∏ —Å–µ—Ä–≤–µ—Ä–æ–≤') {
            bot.sendMessage(chatId, 'üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, –∞–π–ø–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', {
                reply_markup: {
                    keyboard: generateServerButtons(31),
                    resize_keyboard: true
                }
            });
            chatStates[chatId] = 'waiting_for_number3';
        } else if (text === 'üõ° –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞') {
            bot.sendMessage(chatId, 'üé≠ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä, —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç', {
                reply_markup: {
                    keyboard: generateServerButtons(31),
                }
            });
            chatStates[chatId] = 'waiting_for_number4';
        } else if (!commands.includes(text)) {
            handleServerResponse(chatId, text);
        }
    } else {
        bot.sendMessage(chatId, `–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª ${requiredChannelId} –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞.`);
    }
};